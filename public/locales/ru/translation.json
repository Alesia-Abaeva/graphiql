{
  "pageTitle": {
    "home": "Главная",
    "signup": "Регистрация",
    "login": "Вход",
    "sandbox": "Песочница",
    "error": "Ошибка"
  },
  "button": {
    "signup": "Регистрация",
    "login": "Войти",
    "logout": "Выйти",
    "access": "Получить доступ",
    "docs": "О проекте",
    "start": "Начать",
    "signGithub": "Войти с помощью GitHub",
    "signGoogle": "Войти с помощью Google"
  },
  "home": {
    "introTitle": "<0>GraphQL</0> платформа для разработчиков",
    "introText": "GraphiQL – это универсальная среда разработки для вашего GraphQL API, позволяющая отправлять и обрабатывать запросы быстро, удобно и безопасно.",
    "descriptionGoal": "Главная цель нашего GraphiQL Sandbox — предоставить вам возможность удобно изучать и тестировать ваш GraphQL API.",
    "descriptionText": "GraphiQL Sandbox это GraphQL Редактор кода создан и поддерживается студентами курса по React от RS School. Среда разработки имеет весь базовый функционал: подсветка синтаксиса, подсказки и автозаполнение при написании запроса, обработка ошибок, поддержка переменных и заголовков, документация API с поиском и поддержкой markdown и многое другое.",
    "featureShowcase": {
      "docs": {
        "title": "Документация к API",
        "text": "Панель с документацией к API это одна из самых впечатляющих функций GraphiQl Sandbox. Она позволяет вам изучить всю схему вашего API, типы данных, поля. Также доступен удобный поиск по всем полям документации."
      },
      "headers": {
        "title": "Поддержка HTTP заголовков",
        "text": "GraphiQL Sandbox позволяет вам отправлять HTTP заголовки, они нужны например для отправки токена для авторизации на вашем API. Чтобы добавить заголовки к запросу, убедитесь, что во вкладке 'Заголовки' вы добавили данные в формате JSON. Кстати можно добавлять сразу несколько полей."
      }
    },
    "developerTitle": "Команда"
  },
  "footer": {
    "copyright": "Все права защищены",
    "madeBy": "Создан",
    "screenReader": "Информация о школе RS School"
  },
  "form": {
    "fields": {
      "email": "Адрес эл. почты",
      "password": "Пароль",
      "confirmPsw": "Подтвердить пароль"
    },
    "placeholder": {
      "email": "Адрес электронной почты",
      "password": "Пароль"
    },
    "error": {
      "emptyMail": "Пожалуйста, введите ваш email",
      "invalidMail": "Пожалуйста, введите действительный адрес электронной почты",
      "emptyPsw": "Пожалуйста, введите ваш пароль",
      "invalidPsw": "Пароль должен содержать не менее 8 знаков, включать по крайней мере одну цифру, одну заглавную букву, одну строчную букву и один специальный символ.",
      "notMatchingPsw": "Введенные пароли не совпадают",
      "confirmPsw": "Повторите пароль"
    }
  },
  "signUp": {
    "title": "Создать аккаунт",
    "loginRedirect": "Уже есть аккаунт?",
    "redirectLink": "Войти"
  },
  "logIn": {
    "title": "Войти",
    "signUpRedirect": "Еще нет аккаунта?",
    "redirectLink": "Создать аккаунт",
    "or": "или"
  },
  "sandbox": {
    "newTab": "Без Названия",
    "buttons": {
      "variables": "Переменные",
      "headers": "Заголовки"
    },
    "placeholder": "Введите ваш запрос",
    "tooltips": {
      "docsClose": "Показать документацию",
      "refetch": "Запросить GraphQL схему",
      "shortcuts": "Все горячие клавиши",
      "settings": "Открыть настройки",
      "execute": "Выполнить запрос (ctrl + enter)",
      "prettify": {
        "default": "Форматировать (shift + ctrl + p)",
        "done": "Готово!",
        "error": "Возможно невалидный GraphQL, не получилось форматировать"
      },
      "copy": {
        "default": "Скопировать (shift + ctrl + c)",
        "done": "Скопировано!"
      }
    },
    "response": {
      "error": "{{fieldName}} имеют невалидный JSON формат. Пожалуйста, исправьте ошибки и повторите запрос."
    },
    "errors": {
      "execute": "Не получилось выполнить запрос. Проверьте API или ваше интернет соединение и попробуйте снова.",
      "failedFetch": "Не удалось загрузить GraphQL схему"
    }
  },
  "notFound": {
    "title": "СТРАНИЦА НЕ НАЙДЕНА",
    "subtitle": "похоже данная страница не существует",
    "homeLink": "перейти на главную"
  },
  "docs": {
    "header": {
      "title": "Дока"
    },
    "explorer": {
      "title": "Схема GraphQL предоставляет корневой тип для каждого вида операций.",
      "sectionTitleField": "Тип поля",
      "sectionTitleRoot": "Корневые типы",
      "sectionTitleAll": "Все типы схем"
    },
    "search": {
      "placeholder": "Поиск  ⌘ + K",
      "notFound": "Ничего не найдено"
    }
  },
  "modals": {
    "shortcuts": {
      "title": "Горячие клавиши",
      "columns": {
        "keys": "Комбинация",
        "functions": "Функция"
      },
      "function": {
        "search": "Поиск по документации",
        "query": "Выполнить запрос",
        "prettify": "Форматировать редактор",
        "copy": "Скопировать запрос",
        "refetch": "Запросить GraphQL схему"
      },
      "message": "Редактор кода также поддерживает горячие клавиши CodeMirror."
    },
    "settings": {
      "title": "Настройки",
      "cache": {
        "title": "Включить кеширование",
        "subtitle": "Все GraphQL запросы будут кешироваться. При одинаковом запросе данные ответа будут получены из кеша.",
        "toggler": {
          "on": "Вкл",
          "off": "Выкл"
        }
      },
      "stats": {
        "title": "Показывать статистику",
        "subtitle": "Включает индикаторы с полезной информацией (время запроса, настройка кеша).",
        "toggler": {
          "on": "Вкл",
          "off": "Выкл"
        }
      },
      "clear": {
        "title": "Очистить данные",
        "subtitle": "Удалить все локальные данные пользователя и начать заново.",
        "button": {
          "text": "Очистить",
          "popup": {
            "title": "Очистить локальные данные?",
            "subtitle": "Вы уверены, что хотите удалить данные? Это действие отменить нельзя.",
            "confirm": "Да",
            "cancel": "Нет"
          }
        }
      }
    }
  },
  "developersList": {
    "alesiaAbaeva": "Алеся Абаева",
    "olegKolosov": "Олег Колосов",
    "mariaErmolaeva": "Мария Ермолаева"
  },
  "loader": "Загрузка...",
  "errorBoundary": {
    "errorTitle": "Произошла ошибка",
    "defaultMsg": "Что-то пошло не так",
    "errorReset": "Попробовать еще раз",
    "errorReload": "Перезагрузить страницу"
  }
}
